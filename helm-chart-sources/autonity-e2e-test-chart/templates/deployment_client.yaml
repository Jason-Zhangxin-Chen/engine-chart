{{- $imageClientHost := .Values.imageClientUbuntuHost -}}
{{- $imageE2ETestEngine := .Values.imageAutonityE2ETestEngine -}}
{{- $namespace := .Release.Namespace -}}
{{- $indexEngine := (atoi (toString .Values.e2eTestEngine.index)) -}}
{{- $validatorAddress := .Values.validators.ips -}}


{{ range $i, $e := until (atoi (toString .Values.validators.num)) }}
---
{{ if lt $i $indexEngine }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: validator-{{ $i }}
  namespace: {{ $namespace }}
spec:
  selector:
    matchLabels:
      app: validator-{{ $i }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: validator-{{ $i }}
    spec:
      containers:
        - name: validator
          image: {{ $imageClientHost.repository }}:{{ $imageClientHost.tag }}
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
{{ else }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: e2e-test-engine
  namespace: {{ $namespace }}
spec:
  selector:
    matchLabels:
      app: e2e-test-engine
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: e2e-test-engine
    spec:
      containers:
        - name: e2e-test-engine
          image: {{ $imageE2ETestEngine.repository }}:{{ $imageE2ETestEngine.tag }}
          command: ["python3"]
          args: ["e2etestengine.py", "./bin/autonity", "-b", "master"]
          env:
          {{- if $validatorAddress }}
          - name: VALIDATOR_IPS
            value: "{{ range $i, $e := until (atoi (toString .Values.validators.num)) }}{{index $validatorAddress $i }} {{ end }}"
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
{{ end }}

{{- end}}